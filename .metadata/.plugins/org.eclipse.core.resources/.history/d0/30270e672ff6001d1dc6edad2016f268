//We will using bit set/reset
// SET means on
// reset means off

#include "stm32f4xx.h"

#define GPIOAEN 		(1U<<0)
#define UART2AEN 		(1U<<17)


int main(void)
{

	while(1){

	}

}

void uart2_tx_init(void){


	/*Enable Clock Access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN; //set position 1 to 0

	/*SET PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);  //set position 4 to 0
	GPIOA->MODER |=(1U<<5);  //set position 5 to 1

	/*SET PA2 Alternate function type to UART_TX (AF07- AF00 )*/

	GPIOA->AFR[0] |= (1U<<8);
	GPIOA->AFR[0] |= (1U<<9);
	GPIOA->AFR[0] |= (1U<<10);
	GPIOA->AFR[0] |= (1U<<11);

	/*Configure UART Module*/
	/*Enable Clock access to UART2 */
	/*Configure Baudrate*/
	/*Configure the transfer direction*/
	/*Enable UART Module*/

}
